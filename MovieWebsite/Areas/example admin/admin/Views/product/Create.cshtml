@model ShopOnline.Models.product

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/admin/Views/Shared/_MyLayout.cshtml";
}

<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-red">
            <div class="panel-heading">
                Thêm mới Sản phẩm
            </div>
            <!-- /.panel-heading -->
            <div class="panel-body">
                @using (Html.BeginForm("Create", "product", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.Label("Danh mục", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @*/Html.EditorFor(model => model.categoryid, new { htmlAttributes = new { @class = "form-control" } })/*@
                                @Html.DropDownListFor(model => model.categoryid, (SelectList)ViewBag.Category, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.categoryid, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("Tên sản phẩm", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control", @required = true } })
                                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Giá", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control", @required = true, @type = "number" } })
                                @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("Hình đại diện", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <input type="file" name="img" id="img" accept=".jpg,.png,.gif,.jpeg,.bmp" />
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("Mô tả", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.description, new { htmlAttributes = new { @class = "form-control", @required = true } })
                                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.meta, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.meta, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.meta, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.size, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.size, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.size, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.color, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.color, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.color, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("Hiển thị", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @{
                                    bool hide = true;
                                }
                                @Html.CheckBoxFor(model => hide)

                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Lưu" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>
                }
                <div>
                    @Html.ActionLink("Quay lại", "Index")
                </div>
            </div>
        </div>
    </div>
</div>
@section _Footer
{
    <script src="~/Areas/admin/Content/ckfinder/ckfinder.js"></script>
    <script src="~/Areas/admin/Content/ckeditor/ckeditor.js"></script>
    <script type="text/javascript">
        var editor = CKEDITOR.replace("description");
        var editor = CKEDITOR.replace("description", { height: '600px' });
        customConfig: '/Areas/admin/Content/ckeditor/config.js';
    </script>
    <script>
        $(function () {
            $("#name").keyup(function () {
                var text = $.trim($(this).val().toLowerCase());
                var text_create;
                text_create = text.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, "a").replace(/\ /g, '-').replace(/đ/g, "d").replace(/đ/g, "d").replace(/ỳ|ý|ỵ|ỷ|ỹ/g, "y").replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, "u").replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ.+/g, "o").replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ.+/g, "e").replace(/ì|í|ị|ỉ|ĩ/g, "i");
                $('#meta').val(text_create);
            }).keyup();
        });
    </script>
}
