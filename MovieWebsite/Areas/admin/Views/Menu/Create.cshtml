@model MovieWebsite.Models.Menu
@{
    ViewBag.Title = "Thêm mới Menu";
    Layout = "~/Areas/admin/Views/Shared/adminLayout.cshtml";
}

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Thêm mới Menu</h6>
    </div>
    <div class="card-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group row">
                    @Html.LabelFor(model => model.Name, "Tên menu", new { @class = "col-sm-2 col-form-label" })
                    <div class="col-sm-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Link, "Đường dẫn", new { @class = "col-sm-2 col-form-label" })
                    <div class="col-sm-10">
                        @Html.EditorFor(model => model.Link, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Link, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Meta, "Meta", new { @class = "col-sm-2 col-form-label" })
                    <div class="col-sm-10">
                        @Html.EditorFor(model => model.Meta, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Meta, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Hide, "Ẩn", new { @class = "col-sm-2 col-form-label" })
                    <div class="col-sm-10">
                        <div class="custom-control custom-switch">
                            @Html.EditorFor(model => model.Hide, new { htmlAttributes = new { @class = "custom-control-input" } })
                            <label class="custom-control-label" for="Hide"></label>
                        </div>
                        @Html.ValidationMessageFor(model => model.Hide, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.C_Order, "Thứ tự", new { @class = "col-sm-2 col-form-label" })
                    <div class="col-sm-10">
                        @Html.EditorFor(model => model.C_Order, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.C_Order, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-sm-10 offset-sm-2">
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save"></i> Lưu
                        </button>
                        <a href="@Url.Action("Index")" class="btn btn-secondary">
                            <i class="fas fa-arrow-left"></i> Quay lại
                        </a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section _footer {
    <script>
        $(document).ready(function () {
            // Tự động tạo Meta từ Name
            $("#Name").on('input', function () {
                var name = $(this).val();
                var meta = name.toLowerCase()
                    .replace(/[^\w\s-]/g, '') // Xóa ký tự đặc biệt
                    .replace(/\s+/g, '-')     // Thay khoảng trắng bằng dấu gạch
                    .replace(/--+/g, '-');    // Xóa nhiều dấu gạch liên tiếp
                $("#Meta").val(meta);
            });
        });
    </script>
}

